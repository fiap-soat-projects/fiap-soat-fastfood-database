name: Terraform

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  plan:
    runs-on: ubuntu-latest
    environment: prd
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: false

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Create tfvars file
        run: echo "${{ secrets.TFVARS_CONTENT }}" > terraform.tfvars

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            terraform plan -var-file=terraform.tfvars -out=tfplan
            terraform apply -auto-approve -var-file=terraform.tfvars -refresh-only
          else
            terraform plan -var-file=terraform.tfvars -out=tfplan
          fi

      - name: Upload Plan
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: ./tfplan

  apply:
    if: github.ref == 'refs/heads/main'
    needs: plan
    runs-on: ubuntu-latest
    environment: prd
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: false

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Terraform Init
        run: terraform init

      - name: Download Plan
        uses: actions/download-artifact@v4
        with:
          name: terraform-plan
          path: .

      - name: Create tfvars file
        run: echo "${{ secrets.TFVARS_CONTENT }}" > terraform.tfvars

      - name: Terraform Apply
        run: terraform apply tfplan
